/**:
  ros__parameters:
    common:
      planning_method: "rule_base"
      # planning_method: "optimization_base"

      max_accel:  1.0
      min_accel: -1.0
      max_jerk:  1.0
      min_jerk: -0.5
      idling_time: 2.0
      min_object_accel: -1.0

    obstacle_filtering:
      rough_detection_area_expand_width : 5.0
      detection_area_expand_width : 0.0
      decimate_step_length : 1.0
      min_obstacle_velocity : 3.0
      margin_for_collision_time : 3.0
      max_ego_obj_overlap_time : 1.0
      max_prediction_time_for_collision_check : 20.0

    rule_based_planner:
      kp: 0.3 # 0.003
      ki: 0.0
      kd: 0.0 # 0.1
      vel_to_acc_weight: 0.3 # 30.0 # target acceleration is calculated by (target_velocity - current_velocity) * vel_to_acc_weight

      min_slow_down_target_vel: 3.0 # minimum target velocity during slow down

      max_obj_velocity_for_stop : 1.0
      safe_distance_margin : 5.0
      min_obstacle_stop_accel : -3.0

    optimization_based_planner:
      resampling_s_interval: 2.0
      dense_resampling_time_interval: 0.1
      sparse_resampling_time_interval: 0.5
      dense_time_horizon: 5.0
      max_time_horizon: 15.0
      max_trajectory_length: 200.0
      initial_velocity_margin: 0.1 #[m/s]

      # Parameters for safe distance
      safe_distance_margin: 5.0
      t_dangerous: 0.5

      # Parameters for collision detection
      collision_time_threshold: 10.0
      object_zero_velocity_threshold: 3.0 #[m/s]
      object_low_velocity_threshold: 3.0 #[m/s]
      external_velocity_limit: 20.0 #[m/s]
      delta_yaw_threshold_of_object_and_ego: 90.0 # [deg]
      delta_yaw_threshold_of_nearest_index: 60.0 # [deg]
      collision_duration_threshold_of_object_and_ego: 1.0 # [s]

      # Switch for each functions
      enable_adaptive_cruise: true
      use_object_acceleration: false
      use_hd_map: true

      # For initial Motion
      replan_vel_deviation: 5.0         # velocity deviation to replan initial velocity [m/s]
      engage_velocity: 0.25              # engage velocity threshold [m/s] (if the trajectory velocity is higher than this value, use this velocity for engage vehicle speed)
      engage_acceleration: 0.1           # engage acceleration [m/ss] (use this acceleration when engagement)
      engage_exit_ratio: 0.5             # exit engage sequence to normal velocity planning when the velocity exceeds engage_exit_ratio x engage_velocity.
      stop_dist_to_prohibit_engage: 0.5  # if the stop point is in this distance, the speed is set to 0 not to move the vehicle [m]

      # Weights for optimization
      max_s_weight: 100.0
      max_v_weight: 1.0
      over_s_safety_weight:  1000000.0
      over_s_ideal_weight:  50.0
      over_v_weight:  500000.0
      over_a_weight:  5000.0
      over_j_weight:  10000.0
